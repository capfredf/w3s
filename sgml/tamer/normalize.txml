#lang sgml/xml

<?xml version="1.0"?>

<!DOCTYPE normalize PUBLIC "digimon" "w3s" [
<!ENTITY % xml-spec-replacement-text 'INCLUDE' >
<!ENTITY % xml-spec-expansion 'INCLUDE' >
<!ENTITY % svg-xml:space "INCLUDE" >

<!ENTITY d "&#xD;">
<!ENTITY a "&#xA;">
<!ENTITY da "&#xD;&#xA;">

<?pi invisible?>

<!NOTATION public PUBLIC "public.dtd">
<!NOTATION system SYSTEM "system.dtd">
<!NOTATION pubsys PUBLIC "public.dtd" "system.dtd">

<!ENTITY open-hatch PUBLIC "-//Textuality//TEXT Standard open-hatch boilerplate//EN" "http://www.textuality.com/boilerplate/OpenHatch.xml">
<!ENTITY hatch-pic SYSTEM "../grafix/OpenHatch.gif" NDATA gif >

<!ENTITY Pub-Status "This is a pre-release of the
specification.">

<!ATTLIST termdef
id      ID      #REQUIRED
name    CDATA   #IMPLIED>

<!ATTLIST list
type    (bullets|ordered|glossary)  "ordered">

<!ATTLIST form
method  CDATA   #FIXED "POST">

<!ELEMENT normalize ANY>

<!ELEMENT br EMPTY>
<!ELEMENT p (#PCDATA|emph)* >
<!ELEMENT container ANY>

<!ELEMENT spec (front, body, back?)>
<!ELEMENT div1 (head, (p | list | note)*, div2*)>

<![%xml-spec-replacement-text;[
<!ENTITY name "Albert Camus">
<!ENTITY % pub    "&#xc9;ditions Gallimard" >
<!ENTITY   rights "All rights reserved" >
<!ENTITY   book   "La Peste: &name;,
&#xA9; 1947 %pub;. &rights;" >

<!ENTITY example "<p>An ampersand (&#38;#38;) may be escaped
numerically (&#38;#38;#38;) or with a general entity
(&amp;amp;).</p>" >
]]>

<![%xml-spec-expansion;[
<!ELEMENT xml-spec-example (#PCDATA) >
<!ENTITY % xx '&#37;zz;'>
<!ENTITY % zz '&#60;!ENTITY tricky "error-prone@AT&amp;T;" >' >
%xx;
]]>

<![%svg-xml:space;[
<!ATTLIST svg:text
          xml:space  (default|preserve) "preserve"
          xml:lang CDATA #FIXED "svg">
]]>
]>

<?exec true?>

<normalize id="&#xd;&#xd;A&#xa;&#xa;B&#xd;&#xa;" literacy="&book;" pe="%expansion;" pe="dup" ext="&open-hatch;" ndata="&hatch-pic;">
           <testcase>This sample shows an &tricky; method.</testcase>
           &example;

           <p> I <b>dislike</b> <i>XML</i>. </p>

<!-- NOTE
     svg has special rules to dealing with non-space whitespaces,
     and those rules are applied subsequent to applying XML rules.

     Those rules CANNOT be illustrated in `#lang sgml/xml` -->

<svg:text xml:space="default">
      WS example
      indented lines
</svg:text>
<svg:text>WS example indented lines</svg:text>

<svg:text xml:space='default'>
WS example
non-indented lines
</svg:text>
<svg:text xml:space='preserve'>WS examplenon-indented lines</svg:text>

</normalize>
